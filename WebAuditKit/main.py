import optparse
import os

from cert_analysis import cert_analysis
from html_scrapper import html_scrapper
from http_analysis import http_analysis
from nmap_scanner import nmap_scanner

__author__ = 'sergio'


def main(host, working_dir, sslscan_path):
    if not working_dir.endswith('/'):
        working_dir += '/'

    if not os.path.isdir(working_dir):
        print "[!!] Working directory must exist. Exiting..."
        exit(1)

    if sslscan_path is not None and not sslscan_path.endswith('/'):
        sslscan_path += '/'

    print "[*] Starting..."
    #nm = nmap_scanner(host, path)  !!Quit comment
    l = list()
    l.append(('tcp','80','up',''))
    #l.append(('tcp', '443', 'up', ''))
    http_conn = http_analysis(host,l, working_dir)
    cert = cert_analysis(http_conn.host, l, working_dir, sslscan_path)
    #Look for plugins
    scrapper = html_scrapper(http_conn.host, l, working_dir)


def print_help(parser):
    print "arguments error!!\n"
    parser.print_help()
    exit(-1)

if __name__ == "__main__":
    parser = optparse.OptionParser()
    parser.add_option("-u", action="store", help="Host to audit", dest="host",type="string")
    parser.add_option("-d", action="store", help="Working directory", dest="dir", type="string")
    parser.add_option("--sslscan", action="store", help="SSLScan path", dest="sslscan", type="string")

    (opts, args) = parser.parse_args()
    if opts.host is not None and opts.dir is not None and opts.sslscan is not None:
        main(opts.host, opts.dir, opts.sslscan)
    elif opts.host is not None and opts.dir is not None:
        main(opts.host, opts.dir)
    else:
        print_help(parser)