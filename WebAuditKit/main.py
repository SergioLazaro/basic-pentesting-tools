import optparse
import os

from core.cert_analysis import cert_analysis
from core.html_scrapper import html_scrapper
from core.http_analysis import http_analysis
from core.nmap_scanner import nmap_scanner
from core.wfuzz import wfuzz_launcher
from core.configurationreader import configuration_reader

__author__ = 'sergio'


def main(host):
    config = configuration_reader()

    #nm = nmap_scanner(host, config.outputpath)
    l = list()
    l.append(('tcp','80','up',''))
    #l.append(('tcp', '443', 'up', ''))
    http_conn = http_analysis(host,l, config.outputpath)
    cert = cert_analysis(http_conn.host, l, config.outputpath, config.sslscan_path)
    #Look for plugins
    scrapper = html_scrapper(http_conn.host, l, config.outputpath, config.depth)
    wfuzz = wfuzz_launcher(http_conn.host,l, scrapper.fuzzing_dirs, config)


def print_help(parser):
    print "arguments error!!\n"
    parser.print_help()
    exit(-1)

if __name__ == "__main__":
    parser = optparse.OptionParser()
    parser.add_option("-u", action="store", help="Host to audit", dest="host",type="string")

    (opts, args) = parser.parse_args()
    if opts.host is not None:
        main(opts.host)
    else:
        print_help(parser)