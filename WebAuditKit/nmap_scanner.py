from pnmap import nmap


class nmap_scanner:
    def __init__(self, host, working_dir):
        self.host = host
        self.working_dir = working_dir
        self.port_list = None
        self.nm = nmap.PortScanner()
        self.nmap_scan()


    def nmap_scan(self):
        print "[*] Starting nmap scan for " + self.host
        self.nm.scan(hosts=self.host, arguments=' -p- -Pn -T3')

        if self.nm[self.host].state() == "up":
            print "[*] Host is up. Starting port scan..."
            self.show_protocols()

    def show_protocols(self):
        if self.port_list is None:
            self.port_list = list()
            for p in self.nm[self.host].all_protocols():
                protocol_ports = list(self.nm[self.host][p].keys())
                protocol_ports.sort()

                for port in protocol_ports:
                    status = self.nm[self.host][p][port]['state']
                    service = self.nm[self.host][p][port]['name']
                    self.port_list.append((p, port,status, service))

        self.create_evidence()
        self.print_scan_result()

    def create_evidence(self):
        file = open(self.working_dir + 'nmap.txt','w')
        file.write("NMAP SCAN RESULTS FOR HOST %s" % self.host)
        file.write("======================================================")
        for port_result in self.port_list:
            file.write("\tProtocol: %s - Port: %s - Status: %s - Service: %s" % (port_result[0], port_result[1],
                                                                            port_result[2], port_result[3]))


    def print_scan_result(self):
        for port_result in self.port_list:
            print "\tProtocol: %s - Port: %s - Status: %s - Service: %s" % (port_result[0], port_result[1],
                                                                            port_result[2], port_result[3])