import subprocess, time, os

class wfuzz_launcher:
    def __init__(self, host, port_list, fuzzing_paths, config):
        self.host = host
        self.port_list = port_list
        self.fuzzing_paths = fuzzing_paths
        self.config = config
        self.iter_fuzz_dicts()

    def iter_fuzz_dicts(self):
        print "[*] Starting wfuzz on host: " + self.host
        for dict in os.listdir(self.config.wfuzz_dicts):     #Starting wfuzz 5 seconds after the previous one ends
            self.start_wfuzz(dict)
            time.sleep(5)

    def start_wfuzz(self, dict):
        count = 1
        os.chdir(self.config.wfuzz_path)
        for path in self.fuzzing_paths:
            tmp_host = ""
            '''
                HACER BONITO
            '''
            print path
            path = self.check_path(path)
            print path
            for port in self.port_list:
                if port[1] == '80' and os.path.isfile(self.config.wfuzz_dicts + dict):
                    tmp_host = "http://" + self.host

                    print "[*] WFUZZ: " + self.host + path + 'FUZZ'
                    print "[*] WFUZZ PATH: python " + os.getcwd() + "/wfuzz.py -z file," + \
                          self.config.wfuzz_dicts + dict + " " + tmp_host + path + 'FUZZ'
                    p = subprocess.call('python ' + "wfuzz.py -z file," +
                                          self.config.wfuzz_dicts + dict + " " + tmp_host +
                                         path + 'FUZZ', stdout=subprocess.PIPE)
                    '''
                    p = subprocess.Popen(['wfuzz',"-z file," + self.config.wfuzz_dicts + dict + " " + tmp_host +
                                          path + 'FUZZ'], stdout=subprocess.PIPE)
                    '''
                    print "[*] WFUZZ output file written: " + self.config.outputpath + "wfuzz" + str(count) + ".txt"
                    file = open(self.config.outputpath + "wfuzz" + str(count) + ".txt", "w")
                    self.get_output(p,file)

                if port[1] == '443' and os.path.isfile(self.config.wfuzz_dicts + '/' + path):
                    tmp_host = "https://" + self.host
                    print "[*] WFUZZ: " + self.host + path + 'FUZZ'
                    print "[*] WFUZZ PATH: " + 'python ' + self.config.wfuzz_path + "wfuzz.py -z file," + dict + " " + \
                          tmp_host + path + 'FUZZ'
                    # p = subprocess.Popen(['python', self.config.wfuzz_path + "wfuzz.py -z file," +
                    #                      self.config.wfuzz_dicts + dict + " " + self.host +
                    #                     path + 'FUZZ'], stdout=subprocess.PIPE)
                    p = subprocess.Popen(['python', "wfuzz.py -z file," +
                                          self.config.wfuzz_dicts + dict + " " + tmp_host +
                                          path + 'FUZZ'], stdout=subprocess.PIPE)
                    print "[*] WFUZZ output file written: " + self.config.outputpath + "wfuzz" + str(count) + ".txt"
                    file = open(self.config.outputpath + "wfuzz" + str(count) + ".txt", "w")
                    self.get_output(p, file)
                count += 1
            self.config.wfuzz_path

    def get_output(self,p, file):
        while True:
            line = p.stdout.readline()
            if line == '':
                break

            file.write(line)

        file.close()

    def check_path(self, path):
        if path.startswith('/'):
            path = path[1:]
        return path